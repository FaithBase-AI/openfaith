/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as appRouteImport } from './routes/(app)/route'
import { Route as IndexImport } from './routes/index'
import { Route as OauthProviderImport } from './routes/oauth/$provider'
import { Route as authAuthLayoutImport } from './routes/(auth)/_authLayout'
import { Route as appDashboardImport } from './routes/(app)/dashboard'
import { Route as authAuthLayoutSignInImport } from './routes/(auth)/_authLayout.sign-in'

// Create Virtual Routes

const authImport = createFileRoute('/(auth)')()

// Create/Update Routes

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const appRouteRoute = appRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OauthProviderRoute = OauthProviderImport.update({
  id: '/oauth/$provider',
  path: '/oauth/$provider',
  getParentRoute: () => rootRoute,
} as any)

const authAuthLayoutRoute = authAuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => authRoute,
} as any)

const appDashboardRoute = appDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => appRouteRoute,
} as any)

const authAuthLayoutSignInRoute = authAuthLayoutSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authAuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteImport
      parentRoute: typeof rootRoute
    }
    '/(app)/dashboard': {
      id: '/(app)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardImport
      parentRoute: typeof appRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_authLayout': {
      id: '/(auth)/_authLayout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthLayoutImport
      parentRoute: typeof authRoute
    }
    '/oauth/$provider': {
      id: '/oauth/$provider'
      path: '/oauth/$provider'
      fullPath: '/oauth/$provider'
      preLoaderRoute: typeof OauthProviderImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_authLayout/sign-in': {
      id: '/(auth)/_authLayout/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authAuthLayoutSignInImport
      parentRoute: typeof authAuthLayoutImport
    }
  }
}

// Create and export the route tree

interface appRouteRouteChildren {
  appDashboardRoute: typeof appDashboardRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appDashboardRoute: appDashboardRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

interface authAuthLayoutRouteChildren {
  authAuthLayoutSignInRoute: typeof authAuthLayoutSignInRoute
}

const authAuthLayoutRouteChildren: authAuthLayoutRouteChildren = {
  authAuthLayoutSignInRoute: authAuthLayoutSignInRoute,
}

const authAuthLayoutRouteWithChildren = authAuthLayoutRoute._addFileChildren(
  authAuthLayoutRouteChildren,
)

interface authRouteChildren {
  authAuthLayoutRoute: typeof authAuthLayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthLayoutRoute: authAuthLayoutRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof authAuthLayoutRouteWithChildren
  '/dashboard': typeof appDashboardRoute
  '/oauth/$provider': typeof OauthProviderRoute
  '/sign-in': typeof authAuthLayoutSignInRoute
}

export interface FileRoutesByTo {
  '/': typeof authAuthLayoutRouteWithChildren
  '/dashboard': typeof appDashboardRoute
  '/oauth/$provider': typeof OauthProviderRoute
  '/sign-in': typeof authAuthLayoutSignInRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/(app)/dashboard': typeof appDashboardRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_authLayout': typeof authAuthLayoutRouteWithChildren
  '/oauth/$provider': typeof OauthProviderRoute
  '/(auth)/_authLayout/sign-in': typeof authAuthLayoutSignInRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/oauth/$provider' | '/sign-in'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/oauth/$provider' | '/sign-in'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/dashboard'
    | '/(auth)'
    | '/(auth)/_authLayout'
    | '/oauth/$provider'
    | '/(auth)/_authLayout/sign-in'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRouteRoute: typeof appRouteRouteWithChildren
  authRoute: typeof authRouteWithChildren
  OauthProviderRoute: typeof OauthProviderRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRouteRoute: appRouteRouteWithChildren,
  authRoute: authRouteWithChildren,
  OauthProviderRoute: OauthProviderRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)",
        "/(auth)",
        "/oauth/$provider"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(app)": {
      "filePath": "(app)/route.tsx",
      "children": [
        "/(app)/dashboard"
      ]
    },
    "/(app)/dashboard": {
      "filePath": "(app)/dashboard.tsx",
      "parent": "/(app)"
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_authLayout"
      ]
    },
    "/(auth)/_authLayout": {
      "filePath": "(auth)/_authLayout.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_authLayout/sign-in"
      ]
    },
    "/oauth/$provider": {
      "filePath": "oauth/$provider.tsx"
    },
    "/(auth)/_authLayout/sign-in": {
      "filePath": "(auth)/_authLayout.sign-in.tsx",
      "parent": "/(auth)/_authLayout"
    }
  }
}
ROUTE_MANIFEST_END */
